<?php declare(strict_types = 1);

return PHPStan\Cache\CacheItem::__set_state(array(
   'variableKey' => '0.4.8',
   'data' => 'O:42:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocNode":1:{s:8:"children";a:40:{i:0;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:47:"Provides a base class for form element plugins.";}i:1;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:0:"";}i:2;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:132:"Form elements are a subset of render elements, representing elements for
HTML forms, which can be referenced in form arrays. See the";}i:3;O:45:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTagNode":2:{s:4:"name";s:5:"@link";s:5:"value";O:51:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\GenericTagValueNode":1:{s:5:"value";s:181:"theme_render Render API topic @endlink for an overview of render
arrays and render elements, and the @link form_api Form API topic @endlink
for an overview of forms and form arrays.";}}i:4;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:0:"";}i:5;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:723:"The elements of form arrays are divided up into properties (whose keys
start with #) and children (whose keys do not start with #). The properties
provide data or settings that are used in rendering and form processing.
Some properties are specific to a particular type of form/render element,
some are available for any render element, and some are available for any
form input element. A list of the properties that are available for all form
elements follows; see \\Drupal\\Core\\Render\\Element\\RenderElement for some
additional information, as well as a list of properties that are common to
all render elements (including form elements). Properties specific to a
particular element are documented on that element\'s class.";}i:6;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:0:"";}i:7;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:101:"Here is a list of properties that are used during the rendering and form
processing of form elements:";}i:8;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:140:"- #after_build: (array) Array of callables or function names, which are
called after the element is built. Arguments: $element, $form_state.";}i:9;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:125:"- #ajax: (array) Array of elements to specify Ajax behavior. See
the @link ajax Ajax API topic @endlink for more information.";}i:10;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:149:"- #array_parents: (string[], read-only) Array of names of all the element\'s
parents (including itself) in the render array. See also #parents, #tree.";}i:11;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:65:"- #default_value: Default value for the element. See also #value.";}i:12;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:333:"- #description: (string) Help or description text for the element. In an
ideal user interface, the #title should be enough to describe the element,
so most elements should not have a description; if you do need one, make
sure it is translated. If it is not already wrapped in a safe markup
object, it will be filtered for XSS safety.";}i:13;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:81:"- #disabled: (bool) If TRUE, the element is shown but does not accept
user input.";}i:14;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:147:"- #element_validate: (array) Array of callables or function names, which
are called to validate the input. Arguments: $element, $form_state, $form.";}i:15;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:193:"- #field_prefix: (string) Prefix to display before the HTML input element.
Should be translated, normally. If it is not already wrapped in a safe
markup object, will be filtered for XSS safety.";}i:16;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:192:"- #field_suffix: (string) Suffix to display after the HTML input element.
Should be translated, normally. If it is not already wrapped in a safe
markup object, will be filtered for XSS safety.";}i:17;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:68:"- #input: (bool, internal) Whether or not the element accepts input.";}i:18;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:133:"- #parents: (string[], read-only) Array of names of the element\'s parents
for purposes of getting values out of $form_state. See also";}i:19;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:22:"#array_parents, #tree.";}i:20;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:137:"- #process: (array) Array of callables or function names, which are
called during form building. Arguments: $element, $form_state, $form.";}i:21;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:73:"- #processed: (bool, internal) Set to TRUE when the element is processed.";}i:22;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:68:"- #required: (bool) Whether or not input is required on the element.";}i:23;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:199:"- #states: (array) Information about JavaScript states, such as when to
hide or show the element based on input on other elements.
See \\Drupal\\Core\\Form\\FormHelper::processStates() for documentation.";}i:24;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:67:"- #title: (string) Title of the form element. Should be translated.";}i:25;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:80:"- #title_display: (string) Where and how to display the #title. Possible
values:";}i:26;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:68:"- before: Label goes before the element (default for most elements).";}i:27;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:67:"- after: Label goes after the element (default for radio elements).";}i:28;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:60:"- invisible: Label is there but is made invisible using CSS.";}i:29;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:57:"- attribute: Make it the title attribute (hover tooltip).";}i:30;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:177:"- #tree: (bool) TRUE if the values of this element and its children should
be hierarchical in $form_state; FALSE if the values should be flat.
See also #parents, #array_parents.";}i:31;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:139:"- #value_callback: (callable) Callable or function name, which is called
to transform the raw user input to the element\'s value. Arguments:";}i:32;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:30:"$element, $input, $form_state.";}i:33;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:0:"";}i:34;O:45:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTagNode":2:{s:4:"name";s:4:"@see";s:5:"value";O:51:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\GenericTagValueNode":1:{s:5:"value";s:42:"\\Drupal\\Core\\Render\\Annotation\\FormElement";}}i:35;O:45:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTagNode":2:{s:4:"name";s:4:"@see";s:5:"value";O:51:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\GenericTagValueNode":1:{s:5:"value";s:48:"\\Drupal\\Core\\Render\\Element\\FormElementInterface";}}i:36;O:45:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTagNode":2:{s:4:"name";s:4:"@see";s:5:"value";O:51:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\GenericTagValueNode":1:{s:5:"value";s:38:"\\Drupal\\Core\\Render\\ElementInfoManager";}}i:37;O:45:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTagNode":2:{s:4:"name";s:4:"@see";s:5:"value";O:51:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\GenericTagValueNode":1:{s:5:"value";s:10:"plugin_api";}}i:38;O:46:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTextNode":1:{s:4:"text";s:0:"";}i:39;O:45:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocTagNode":2:{s:4:"name";s:8:"@ingroup";s:5:"value";O:51:"PHPStan\\PhpDocParser\\Ast\\PhpDoc\\GenericTagValueNode":1:{s:5:"value";s:12:"theme_render";}}}}',
));